name: Build and Release

on:
  push:
    tags:
      - "v*" # Trigger on version tags

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: sysguage-linux
            cmake_flags: ""
          - os: windows-latest
            artifact_name: sysguage-windows.exe
            cmake_flags: '-G "MinGW Makefiles"'

    steps:
      - uses: actions/checkout@v3

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      - name: Install Windows Dependencies
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          update: true
          install: >-
            mingw-w64-i686-gcc
            mingw-w64-i686-cmake
            mingw-w64-i686-make

      - name: Configure CMake (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Configure CMake (Windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          mkdir build
          cd build
          cmake .. -G "MinGW Makefiles"

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/sysguage${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
