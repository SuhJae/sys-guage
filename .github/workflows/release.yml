name: Build and Release Sysguage

on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags like v1.0.0
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64, arm64] # Specify architectures

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: 3.25.0

      - name: Set up dependencies (Linux/Mac)
        if: runner.os != 'Windows'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Build the project
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_SYSTEM_PROCESSOR=${{ matrix.arch }} ..
          cmake --build . --config Release

      - name: Package the binary
        run: |
          mkdir -p dist
          mv build/sysguage dist/sysguage-${{ runner.os }}-${{ matrix.arch }}.zip
          zip -j dist/sysguage-${{ runner.os }}-${{ matrix.arch }}.zip ./build/sysguage

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: sysguage-${{ runner.os }}-${{ matrix.arch }}
          path: dist/sysguage-${{ runner.os }}-${{ matrix.arch }}.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create a release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/sysguage-*.zip
